// Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.

var Techlahoma = Techlahoma || {};

Techlahoma.Subscriptions = {};

Techlahoma.Subscriptions.origButtonText = '';

var stripePublishableKey = stripePublishableKey || '<%= Rails.configuration.stripe[:publishable_key] %>';



/*
Techlahoma.Subscriptions.handler = StripeCheckout.configure({
  key: '<%= Rails.configuration.stripe[:publishable_key] %>',
  image: '<%= asset_path 'bson-128.png' %>',
  token: function(token) {
    // Use the token to create the charge with a server-side script.
    // You can access the token ID with `token.id`
    $('#subscription_token_id').val(token.id);
    $('#subscription_email').val(token.email);
    $('#new_subscription').get(0).submit();

  }
});
*/

/*
Techlahoma.Subscriptions.friendlyAmount = function(amount){
  return "$" + amount/100;
}
*/


Techlahoma.Subscriptions.init = function(){

  try{
    Stripe.setPublishableKey(stripePublishableKey);
  }catch(error){
    console.log("Maybe stripe isn't loaded?");
    console.log(error);
  }

  $('.exp-date').payment('formatCardExpiry');
  $('input[data-stripe="number"]').payment('formatCardNumber');
  $('input[data-stripe="cvc"]').payment('formatCardCVC');

  $('.exp-date').on('keyup', function() {
      var e = $('.exp-date').first();
      var out = $.payment.cardExpiryVal(e.val());
      $('input[data-stripe="exp_month"]').val(out.month);
      $('input[data-stripe="exp_year"]').val(out.year);
  });

  $('.card-number').on('keyup', Techlahoma.Subscriptions.detectCardType);

  $('form').submit(Techlahoma.Subscriptions.formHandler);

  console.log('setup the form handler');
};


$(function() {
  if( $('#new_subscription').length > 0 ){
    Techlahoma.Subscriptions.init();
  }
});


Techlahoma.Subscriptions.validateField = function(selector, validator){
  console.log('selector ',selector);
  var field = $(selector);
  console.log('val ', field.val());
  var valid = validator(field.val());
  if(valid){
    field.removeClass('error');
  }else{
    field.addClass('error');
  }
  return valid;
}

Techlahoma.Subscriptions.validatePresence = function(value){
  return value !== '';
}






Techlahoma.Subscriptions.preValidate = function(){
  var $form = $('form');
  $form.find('input.submit').val('Validating Info');

  var formIsValid = true;
  var validateField = Techlahoma.Subscriptions.validateField;
  var validatePresence = Techlahoma.Subscriptions.validatePresence;

  formIsValid = validateField('input.email',Techlahoma.Subscriptions.validateEmail) && formIsValid;

  formIsValid = validateField('input.card-number',$.payment.validateCardNumber) && formIsValid;

  // This one is a little tricky, so we do it manually
  var ccExpField = $form.find('input.exp-date');
  var ccExpVal = $.payment.cardExpiryVal(ccExpField.val());
  var ccExpValid = $.payment.validateCardExpiry(ccExpVal.month,ccExpVal.year);
  if(ccExpValid){
    ccExpField.removeClass('error');
  }else{
    ccExpField.addClass('error');
  }

  formIsValid = validateField('input.cvc',$.payment.validateCardCVC) && formIsValid;

  formIsValid = validateField('input#subscription_address1',validatePresence) && formIsValid;

  formIsValid = validateField('input#subscription_city',validatePresence) && formIsValid;

  formIsValid = validateField('input#subscription_state',validatePresence) && formIsValid;

  formIsValid = validateField('input#subscription_zipcode',validatePresence) && formIsValid;


  return formIsValid;
  return emailValid && ccNumValid && ccExpValid && ccCvcValid;
};

Techlahoma.Subscriptions.validateEmail = function(email){
  return email.indexOf('@') > 0 && email.length > 5;
};

Techlahoma.Subscriptions.stripeResponseHandler = function(status, response){
  var $form = $('form');
  console.log('stripeResponseHandler',status,response);

  if (response.error) {
    // Show the errors on the form
    $form.find('.payment-errors').text(response.error.message);
    $form.find('input.submit').prop('disabled', false);
    $form.find('input.submit').val(Techlahoma.Subscriptions.origButtonText);
  } else {
    $form.find('input.submit').val('Processing Payment');

    // response contains id and card, which contains additional card details
    var token = response.id;
    // Insert the token into the form so it gets submitted to the server
    $form.find('#subscription_token_id').val(token);

    //var amount = $('#display_amount').val();
    //amount = accounting.unformat(amount);
    //$('#payment_amount').val(amount);
    // and submit
    $form.get(0).submit();
  }
};

Techlahoma.Subscriptions.detectCardType = function() {
  console.log('detecting');
  var e = $('.card-number').first();
    var type = $.payment.cardType(e.val());
    var img = "money.png";
    switch(type) {
        case "visa":
          img = "visa.png";
          break;
        case "mastercard":
          img = "mastercard.png";
          break;
        case "discover":
          img = "discover.png";
          break;
        case "amex":
          img = "amex.png";
          break;
    }
    e.css('background-image', 'url(/images/creditcards/' + img + ')');
};


Techlahoma.Subscriptions.formHandler = function(event) {

  console.log('calling the formHandler');

  var $form = $(this);

  // Disable the submit button to prevent repeated clicks
  $form.find('button').prop('disabled', true);

  // Remove previous error
  $form.find('.payment-errors').text('');

  Techlahoma.Subscriptions.origButtonText = $form.find('input.submit').val();
  $form.find('input.submit').val('Saving Credit Card');

  // Populate the date fields correctly
  var values = $.payment.cardExpiryVal( $('.exp-date').val() );
  $('.cc_exp_month').val(values.month);
  $('.cc_exp_year').val(values.year);

  if(Techlahoma.Subscriptions.preValidate()){
    Stripe.card.createToken($form, Techlahoma.Subscriptions.stripeResponseHandler);
  }else{
    $form.find('input.submit').val(Techlahoma.Subscriptions.origButtonText);
  }

  // Prevent the form from submitting with the default action
  return false;
}



